def buildnumber = "1.0.0"
apply plugin: 'ear'
apply plugin: 'java'


subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	

	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	jar {
		manifest {
			attributes 'Implementation-Title': 'MyStrutsGradleJunit',
						'Implementation-Version': getDate()
		}
	}     

	sourceSets {
		main {
			java {
				srcDir 'src'
			}
		}
		test{
			java{
				srcDir 'test'
			}
		}			
	}
	repositories {
			mavenCentral()
			flatDir {
        		dirs '../MyStrutsGradleJunit/WebContent/WEB-INF/lib'
        	}
        }

    test {
    //useJUnitPlatform()
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
	
	dependencies { 
		compile name: 'j2ee'
		compile group: 'antlr', name: 'antlr', version: '2.7.2'
		compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.0'
		compile group: 'commons-chain', name: 'commons-chain', version: '1.2'
		compile group: 'commons-digester', name: 'commons-digester', version: '1.8'
		compile group: 'commons-logging', name: 'commons-logging', version: '1.0.4'
		compile group: 'commons-validator', name: 'commons-validator', version: '1.3.1'
		compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
		compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
		compile group: 'oro', name: 'oro', version: '2.0.8'
		compile group: 'org.apache.struts', name: 'struts-taglib', version: '1.3.10'
		compile group: 'org.apache.struts', name: 'struts-core', version: '1.3.10'
		compile group: 'org.apache.struts', name: 'struts-tiles', version: '1.3.8'
		testCompile group: 'strutstestcase', name: 'strutstestcase', version: '2.1.4-1.2-2.4'
		testCompile group: 'junit', name: 'junit', version: '4.12'
		testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19' 
		/* testCompileOnly group: 'junit', name: 'junit', version: '4.4'
    	testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")
		testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.2'
    	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.2'

		testCompile group: 'org.mockito', name: 'mockito-all', ve'rsion: '1.10.19' */
	}
}

project(':MyStrutsGradleJunit') {  
	apply plugin: 'war'
	war {
		jar.enabled = true
		from('WebContent') {
		  exclude '**/WEB-INF/*lib*'
		}
		manifest {
      	attributes  'Implementation-Title': 'MyStrutsGradleJunit',
                  	'Version': buildnumber,
                  	'Build-Time':new Date().format("yyyyMMdd.HHmmss")
		}
		baseName = 'MyStrutsGradleJunit'   
  }
  
}

project(':MyStrutsGradleJunitTest') {
   dependencies {
    compile project(':MyStrutsGradleJunit')
}
}


def getDate() {
    new Date().format('yyyyMMdd.HHmmss')
}

dependencies {
	deploy project(path: ':MyStrutsGradleJunit', configuration: 'archives')
}

ear {
	dependsOn 'remove'
	archiveName = 'MyStrutsGradleJunit.ear'
	appDirName 'MyStrutsGradleJunitEAR'
	deploymentDescriptor {  
        applicationName = "MyStrutsGradleJunit"
        initializeInOrder = true
        displayName = "MyStrutsGradleJunit"  
        description = "My struts EAR for the unit test case"
        webModule("MyStrutsGradleJunit.war", "MyStrutsGradleJunit")  // won't deploy as my.war isn't deploy dependency
    }

  task remove(type: Delete) {
	  delete 'MyStrutsGradleJunit/.project'
	  delete 'MyStrutsGradleJunit/.classpath'
	  delete 'MyStrutsGradleJunit/.settings'
	}

} 